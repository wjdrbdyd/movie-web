import styles from "./App.module.css";
import { useEffect, useState } from "react";

function App() {
  const [loading, setLoading] = useState(true);
  const [coins, setCoins] = useState([]);
  const [money, setMoney] = useState(0);
  const [selectCoin, setSelectCoin] = useState({});
  const changeMoney = (e) => setMoney(e.target.value);
  const onSelectChange = (e) => {
    const selectId = e.target.value;
    const selectCoin = coins.filter((coin) => {
      return coin.id === selectId;
    });
    setSelectCoin(...selectCoin);
  };
  useEffect(() => {
    fetch("https://api.coinpaprika.com/v1/tickers")
      .then((response) => response.json())
      .then((json) => {
        setCoins(json);
        setLoading(false);
      });
  }, []);

  useEffect(() => {
    if (loading === false) {
      setSelectCoin(coins[0]);
    }
  }, [loading, coins]);

  return (
    <div>
      <h1>The Coins! {loading ? "" : `(${coins.length})`}</h1>
      <div>
        <label htmlFor="myMoney">My Money</label>
        <input
          id="myMoney"
          placeholder="Input your money"
          type="number"
          value={money}
          onChange={changeMoney}
        />
        <p>${money}</p>
      </div>
      {loading ? (
        <strong>Loading...</strong>
      ) : (
        <div>
          <select onChange={onSelectChange} value={selectCoin.id}>
            {coins.slice(0, 2000).map((coin) => (
              <option value={coin.id} key={coin.id}>
                {coin.name} ({coin.symbol}) : $ {coin.quotes.USD.price}
              </option>
            ))}
          </select>
          <p>
            Your USD Money To {selectCoin.symbol} Coin Volume:
            {Object.keys(selectCoin).length &&
              (money / selectCoin.quotes.USD.price).toFixed(6)}{" "}
            {selectCoin.symbol}
          </p>
        </div>
      )}
    </div>
  );
}

export default App;
